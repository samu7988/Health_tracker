/********************************************************************
 * @file Accelerometer.c
 * @brief 1)setup accelerometer, enable free fall detection
 * @Description : Enable accelerometer for i2c mode of operation and enable free fall detection
 *
 * SDA : PC10
 * SCL : PC11
 * INT1: PC8
 * @author Sayali Mule
 * @date  November 17, 2021
 * @Reference:
 **********************************************************************/

//***********************************************************************************
//                              Include files
//***********************************************************************************
#include "i2c.h"
#include "accelerometer.h"
// Include logging for this file
#define INCLUDE_LOG_DEBUG 1
#include "src/log.h"
//***********************************************************************************
//                              Global variable
//***********************************************************************************


 //***********************************************************************************
 //                              Macros
 //***********************************************************************************


uint8_t read_accelerometer_register(uint8_t reg_address)
{

  uint8_t read_data = 0;
  I2C_write(&reg_address, 1, ACCELEROMETER_SENSOR_ADDRESS); //send register address first

  I2C_read(&read_data,1, ACCELEROMETER_SENSOR_ADDRESS); //Read the value

  return read_data;
}

uint8_t write_accelerometer_register(uint8_t reg_address, uint8_t write_val)
{

  uint8_t read_data = 0;

  I2C_write(&reg_address, 1, ACCELEROMETER_SENSOR_ADDRESS); //send the register address first

  I2C_write(&write_val,1, ACCELEROMETER_SENSOR_ADDRESS); //Write the value

  return read_data;
}

 /*------------------------------------------------------------------------------------------------------------------------------------*/
 /*
 @brief:Setup accelerometer
 @param: none
 @return: none
 */
 /*-----------------------------------------------------------------------------------------------------------------------------*/
void setup_accelerometer()
{
  /*ADXL345 GPIO pin setup.
    SDA : PC10
    SCL : PC11
    INT1: PC8
  */

  uint8_t val = 0;
  val = read_accelerometer_register(ACCEL_DEVID);

  write_accelerometer_register(ACCEL_REG_POWER_CTL, MEASUREMENT_MODE);
  val = read_accelerometer_register(ACCEL_REG_POWER_CTL);

  LOG_INFO("Val %x\n\r",val);
//  if (!accelerometer_init()) {
//      LOG_INFO("Accelerometer initialisation failed\n\r");
//  }
//  else
//  {
//      LOG_INFO("Accelerometer initilisation passed\n\r");
//  }
}

/*------------------------------------------------------------------------------------------------------------------------------------*/
/*
@brief: accelerometer initialisation
@param: none
@return: none
*/
/*-----------------------------------------------------------------------------------------------------------------------------*/
void accelerometer_init()
{

}
